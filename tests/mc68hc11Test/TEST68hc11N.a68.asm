; Assembler file generated by Auto Disassembler V20230623
;                Program developed by Ruud Baltissen
;           
; Syntax modified for A09 assembler by Fred Jan Kraan
; variant for 68HC11

; MC68HC11
        OPT h11

D0000	EQU	$0000
Z00	EQU	$00
Z01	EQU	$01
D0010	EQU	$0010
Z10	EQU	$10
D0012	EQU	$0012
Z12	EQU	$12
ZFF	EQU	$FF
J1234	EQU	$1234
D3456	EQU	$3456
D7FFF	EQU	$7FFF
P8000	EQU	$8000
DABCD	EQU	$ABCD
 
 



        org $FE00				; Begin address of this block
SFE00:
	aba
	abx
	aby
	adca	Z12			;				[12]
	adca	J1234			;				[1234]
	adca	#$12
	adca	Z12,x			;				[12]
	adca	Z12,y
	adcb	Z12			;				[12]
	adcb	J1234			;				[1234]
	adcb	#$12
	adcb	Z12,X			;				[12]
	adcb	Z12,y
	adda	Z12			;				[12]
	adda	J1234			;				[1234]
	adda	#$12
	adda	Z12,X			;				[12]
	adda	Z12,y
	addb	Z12			;				[12]
	addb	J1234			;				[1234]
	addb	#$12
	addb	Z12,X			;				[12]
	addb	Z12,y
	anda	Z12			;				[12]
	anda	J1234			;				[1234]
	anda	#$12
	anda	Z12,X			;				[12]
	anda	Z12,y
	andb	Z12			;				[12]
	andb	J1234			;				[1234]
	andb	#$12
	andb	Z12,X			;				[12]
	andb	Z12,y
	asla
	aslb
	asld
	asl	D0012			;				[0012]
	asl	D3456			;				[3456]
	asl	Z12,X			;				[12]
	asl	Z12,y
	asra
	asrb
	asr	D0012			;				[0012]
	asr	D3456			;				[3456]
	asr	Z12,X			;				[12]
	asr	Z12,y
AFE4B:					;				[FE4B]
	bcc	AFE4B			;				[FE4B]

	bcs	AFE4B			;				[FE4B]

	beq	AFE4B			;				[FE4B]

	bge	AFE57			;				[FE57]

	bgt	AFE4B			;				[FE4B]

	bhi	AFE7D			;				[FE7D]
;	bclr	AFE57
;	bclr	AFE57,x
;	bclr	AFE57,y

AFE57:					;				[FE57]
	bita	Z12			;				[12]
	bita	D3456			;				[3456]
	bita	Z12,X			;				[12]
	bita	Z12,y
	bita	#$80
	bitb	Z12			;				[12]
	bitb	D3456			;				[3456]
	bitb	Z12,X			;				[12]
	bitb	Z12,y
	bitb	#$21
	ble	AFE6B			;				[FEE5]
	
AFE6B:

	bls	AFE6B			;				[FE4B]

	blt	AFE6B			;				[FEEA]

	bmi	AFE6B			;				[FE4B]

	bne	AFE7D			;				[FE7D]

	bpl	AFE6B			;				[FE4B]

	bra	AFE6B			;				[FE4B]
AFE66:	
 	bclr	Z10, #01010101B
	bclr	Z10,X,#01010101B
	bclr	Z10,y,#01010101B
	
;	brclr	D3456			; dd mm rr	dd = 8-bit direct address
;	brclr	$30,X $55			; ff mm rr	mm = 8-bit mask
;	brclr	AFE66,X,#01010101B			; ff mm rr	ff = 8-bit positive offset

AFE70:					; 		rr = 8-bit signed relative offset
;	brset	Z12,$55 %01010101 AFE70
;AFE72:	brset	$20,X $55 AFE72
;AFE74:	brset	$30,Y %10000000 AFE74

 	bset	Z10, #01010101B
	bset	Z10,X,#01010101B
	bset	Z10,y,#01010101B
	
	bsr	SFE77
	bvc	SFE77
	bvs	SFE77


SFE77:
                FCB   $8D, $D2, $28, $D0, $29, $64	; ..(.)d  $FE77
 
AFE7D:					;				[FE7D]
	cba
	clc
	cli
	clra
	clrb
	clr	D0012			;				[0012]
	clr	D3456			;				[3456]
	clr	Z12,X			;				[12]
	clr	Z12,y
	clv
	cmpa	Z12			;				[12]
	cmpa	D3456			;				[3456]
	cmpa	Z12,X			;				[12]
	cmpa	Z12,y	
	cmpa	#$80
	cmpb	Z12			;				[12]
	cmpb	D3456			;				[3456]
	cmpb	Z12,X			;				[12]
	cmpb	Z12,y
	cmpb	#$21
	coma
	comb
	com	D0012			;				[0012]
	com	D3456			;				[3456]
	com	ZFF,X			;				[FF]
	com	ZFF,y
	cpx	#J1234			;				[1234]
	cpx	Z00,X			;				[00]
	cpx	Z00,Y
	cpx	Z12			;				[12]
	cpx	P8000			;				[8000]
	daa
	deca
	decb
	dec	D0012			;				[0012]
	dec	D3456			;				[3456]
	dec	Z00,X			;				[00]
	dec	Z00,Y
	des
	dex
	eora	Z12			;				[12]
	eora	D3456			;				[3456]
	eora	Z00,X			;				[00]
	eora	Z00,Y
	eora	#$4B
	eorb	Z12			;				[12]
	eorb	D3456			;				[3456]
	eorb	Z00,X			;				[00]
	eorb	Z00,Y
	eorb	#$E4
	inca
	incb
	inc	D0012			;				[0012]
	inc	D3456			;				[3456]
	inc	Z00,X			;				[00]
	inc	Z00,Y
	ins
	inx
	bvc	AFEE1			;				[FEE1]

	jmp	JFF54			;				[FF54]

AFEE1:					;				[FEE1]
	bvc	AFEE1			;				[FEE1]

	jmp	Z10,X			;				[10]
	jmp	Z10,Y

AFEE5:					;				[FEE5]
	bvc	AFEE1			;				[FEE1]

	jmp	J1234			;				[1234]

AFEEA:					;				[FEEA]
	jsr	ZFF,X			;				[FF]
	jsr	ZFF,y

	jsr	P8000			;				[8000]

	jsr	PFF51			;				[FF51]

	ldaa	Z12			;				[12]
	ldaa	D3456			;				[3456]
	ldaa	Z00,X			;				[00]
	ldaa	Z00,Y
	ldaa	#$E4
	ldab	Z12			;				[12]
	ldab	D3456			;				[3456]
	ldab	Z00,X			;				[00]
	ldab	Z00,y
	ldab	#$E4
	lds	Z12			;				[12]
	lds	D3456			;				[3456]
	lds	Z00,X			;				[00]
	lds	Z00,Y
	lds	#$5678			;				[5678]
	ldx	Z12			;				[12]
	ldx	D3456			;				[3456]
	ldx	Z00,X			;				[00]
	ldx	Z00,Y
	ldx	#P8000			;				[8000]
	lsra
	lsrb
	lsr	D0012			;				[0012]
	lsr	D3456			;				[3456]
	lsr	Z00,X			;				[00]
	lsr	Z00,Y
	negb
	nega
	neg	D0000			;				[0000]
	nop
	oraa	Z00			;				[00]
	oraa	D3456			;				[3456]
	oraa	Z00,X			;				[00]
	oraa	Z00,Y
	orab	Z10			;				[10]
	orab	D3456			;				[3456]
	orab	Z00,X			;				[00]
	orab	Z00,Y
	psha
	pshb
	pula
	pulb
	rola
	rolb
	rol	J1234			;				[1234]
	rol	D0010			;				[0010]
	rol	Z00,X			;				[00]
	rol	Z00,Y
	rora
	rorb
	ror	J1234			;				[1234]
	ror	D0010			;				[0010]
	ror	ZFF,X			;				[FF]
	ror	ZFF,Y
	bvc	PFF51			;				[FF51]

	rti

PFF51:					;				[FF51]
	bvc	JFF54			;				[FF54]

	rts

JFF54:					;				[FF54]
	sba
	sbca	#$01
	sbca	J1234			;				[1234]
	sbca	Z10			;				[10]
	sbca	ZFF,X			;				[FF]
	sbca	ZFF,Y
	sbcb	#$FF
	sbcb	J1234			;				[1234]
	sbcb	Z10			;				[10]
	sbcb	ZFF,X			;				[FF]
	sbcb	ZFF,Y
	sec
	sei
	sev
	staa	J1234			;				[1234]
	staa	Z10			;				[10]
	staa	ZFF,X			;				[FF]
	staa	ZFF,Y
	stab	J1234			;				[1234]
	stab	Z10			;				[10]
	stab	Z01,X			;				[01]
	stab	Z01,Y
	sts	D7FFF			;				[7FFF]
	sts	Z10			;				[10]
	sts	Z01,X			;				[01]
	sts	Z01,Y
	stx	P8000			;				[8000]
	stx	Z10			;				[10]
	stx	Z01,X			;				[01]
	stx	Z01,Y
	suba	#$41
	suba	J1234			;				[1234]
	suba	Z10			;				[10]
	suba	ZFF,X			;				[FF]
	suba	ZFF,Y
	subb	#$7B
	subb	J1234			;				[1234]
	subb	Z10			;				[10]
	subb	ZFF,X			;				[FF]
	subb	ZFF,Y
	swi

	tab
	tap
	tba
	tpa
	tsta
	tstb
	tst	DABCD			;				[ABCD]
	tst	D0010			;				[0010]
	tst	ZFF,X			;				[FF]
	tst	ZFF,Y
	tsx
	txs
	wai

	suba	D0012			;				[0012]
	suba	Z12			;				[12]
	suba	Z12			;				[12]
	nop
	rti

 
SFFB3:
        FCB $01, $3B, $01, $3B, $FF, $FF, $FF, $FF	; .;.;....  $FFB3
        FCB $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF	; ........  $FFBB
        FCB $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF	; ........  $FFC3
        FCB $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF	; ........  $FFCB
        FCB $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF	; ........  $FFD3
        FCB $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF	; ........  $FFDB
        FCB $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF	; ........  $FFE3
        FCB $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF	; ........  $FFEB
        FCB $FF, $FF, $FF, $FF, $FF, $FF, $B1, $FF	; ........  $FFF3
        FCB $B3, $FF, $B5, $FE, $00		; .....  $FFFB
 
END					; End of part to assemble
 
 
